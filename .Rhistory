install.packages('maptools')
library(maptools)
classIntervals <- function(var, n, style="quantile", rtimes=3, ..., intervalClosure=c("left", "right"), dataPrecision=NULL) {
if (is.factor(var)) stop("var is categorical")
if (!is.numeric(var)) stop("var is not numeric") }
setwd('/home/rebeldroid12/Nepal_TeamViz')
districts = readShapeSpatial('npl_polbnda_adm3_dis_25k_50k_sdn_wgs84/npl_polbnda_adm3_dis_25k_50k_sdn_wgs84.shp')
vdcs = readShapeSpatial('npl_polbnda_adm4_vdc_25k_50k_sdn_wgs84/npl_polbnda_adm4_vdc_25k_50k_sdn_wgs84.shp')
districts_var = read.csv('score_dist_final_20150616.csv', sep = ',', header=TRUE)
vdcs_var = read.csv('score_vdc_final_20150616.csv', sep = ',', header=TRUE)
plot(districts)
typeof(districts)
require(rgdal)
install.packages(rgdal)
install.packages('rgdal')
library(rgdal)
library('rgdal')
library('rgdal')
library(rgdal)
install.packages(rgdal)
install.packages('rgdal')
install.packages('rgdal')
library(rgdal)
dist_df =  readOGR(dsn=".",layer="npl_polbnda_adm3_dis_25k_50k_sdn_wgs84")
getwd()
dist_df =  readOGR(dsn="/npl_polbnda_adm3_dis_25k_50k_sdn_wgs84",layer="npl_polbnda_adm3_dis_25k_50k_sdn_wgs84")
dist_df =  readOGR(dsn="./npl_polbnda_adm3_dis_25k_50k_sdn_wgs84",layer="npl_polbnda_adm3_dis_25k_50k_sdn_wgs84")
vdc_df =  readOGR(dsn="./npl_polbnda_adm4_vdc_25k_50k_sdn_wgs84",layer="npl_polbnda_adm4_vdc_25k_50k_sdn_wgs84")
dist_shp.df <- as(dist_df,"dataframe")
dist_shp.df <- as(dist_df,"data.frame")
vdc_shp.df <- as(vdc_df,"data.frame")
names(dist_shp.df)
dist_shp.df$DIST_ID
vdc_shp.df$DIST_ID
names(vdc_shp.df)
vdc_shp.df$OCHA_PCODE
names(vdcs_var)
names(districts_var)
names(dist_shp.df)
names(districts_var)
mergeDist <- merge(dist_shp.df,districts_var, by.x="DIST_ID", by.y="dist_id")
names(vdcs_var)
mergeVdc <- merge(vdc_shp.df,vdcs_var, by.x="OCHA_PCODE", by.y="p_code")
HEAD(mergeVdc)
head(mergeVdc)
for (i in names(vdcs_var)) {print(head(i))}
for (i in names(vdcs_var)) {print(i)}
for (i in names(vdcs_var)) {print(head(vdcs_var$i))}
for (i in names(vdcs_var)) {print((vdcs_var$i))}
vdcs_var$p_code
for (i in names(vdcs_var)) {print((vdcs_var$paste(i)))}
for (i in names(vdcs_var)) {print((vdcs_var$paste(i, "")))}
colors <- brewer.pal(9, "YlOrRd")
install.packages("RColorBrewer")
library(RColorBrewer)
names(mergeDist)
names(districts_var)
names(dist_shp.df)
names(mergeDist)
names(mergeVdc)
names(mergeDist)
brks<-classIntervals(mergeDist$deaths, n=9, style="quantile")
brks<- brks$brks
plot(mergeDist, col=colors[findInterval(mergeDist$death, brks,all.inside=TRUE)], axes=F)
full.districts <- writeOGR(mergeDist, "./npl_polbnda_adm3_dis_25k_50k_sdn_wgs84", "npl_polbnda_adm3_dis_25k_50k_sdn_wgs84", driver="ESRI Shapefile")
typeof(mergeDist)
mergeDist <- as(mergeDist, "data.frame")
typeof(mergeDist)
full.districts <- writeOGR(mergeDist, "./npl_polbnda_adm3_dis_25k_50k_sdn_wgs84", "npl_polbnda_adm3_dis_25k_50k_sdn_wgs84", driver="ESRI Shapefile")
full.districts <- writeOGR(mergeDist, "./npl_polbnda_adm3_dis_25k_50k_sdn_wgs84", "npl_polbnda_adm3_dis_25k_50k_sdn_wgs84")
typeof(districts_var)
typeof(dist_shp.df)
nrow(mergeDist)
mergeDist2 <- <- data.frame(matrix(unlist(mergeDist), nrow=66, byrow=T),stringsAsFactors=FALSE)
mergeDist2 <- data.frame(matrix(unlist(mergeDist), nrow=66, byrow=T),stringsAsFactors=FALSE)
typeof(mergeDist2)
full.districts <- writeOGR(mergeDist2, "./npl_polbnda_adm3_dis_25k_50k_sdn_wgs84", "npl_polbnda_adm3_dis_25k_50k_sdn_wgs84")
full.districts <- writeOGR(mergeDist2, "./npl_polbnda_adm3_dis_25k_50k_sdn_wgs84", "npl_polbnda_adm3_dis_25k_50k_sdn_wgs84", driver="ESRI Shapefile")
nrow(dist_shp)
dist_shp =  readOGR(dsn="./npl_polbnda_adm3_dis_25k_50k_sdn_wgs84",layer="npl_polbnda_adm3_dis_25k_50k_sdn_wgs84")
typeof(dist_shp)
typeof(dist_shp.df)
full_districts = readShapeSpatial("./merged_dists","full_dists_data.shp")
full_districts = readShapeSpatial("./merged_dists","full_dists_data.shp")
getwd()
full_districts = readShapeSpatial("./merged_dists","full_dists_data.shp")
full.dists.csv <- read.csv('full_dists_data.csv', sep = ',', header=TRUE)
nrow(full.dists.csv)
full_districts = readShapeSpatial("./merged_dists","full_dists_data.shp")
