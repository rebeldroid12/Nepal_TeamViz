districts$index_wall = as.numeric(districts$score_di13)
brks<-classIntervals(districts$obs_deaths, n=9, style="quantile")
brks<- brks$brks
typeof(districts$obs_death)
is.numeric(districts$obs_death)
brks<-classIntervals(districts$obs_death, n=9, style="quantile")
brks<- brks$brks
plot(districts, col=colors[findInterval(district$obs_death, brks,all.inside=TRUE)], axes=F)
plot(districts, col=colors[findInterval(districts$obs_death, brks,all.inside=TRUE)], axes=F)
levels(district$obs_death)
levels(districts$obs_death)
factors(districts$obs_death)
unique(districts$obs_death)
districts_var = read.csv('score_dist_final_20150616.csv', sep = ',', header=TRUE)
names(districts_var)
unique(districts_var$deaths)
unique(districts_var$casualty)
unique(districts_var$injured)
districts$obs_death[is.na(districts$obs_death)] <- 0
unique(districts$obs_death)
brks<-classIntervals(districts$obs_deaths, n=9, style="quantile")
brks<- brks$brks
is.numeric(districts$obs_death)
if (!is.numeric(districts$obs_death)) stop ('var not num')
if (is.numeric(districts$obs_death)) stop ('var not num')
brks<-classIntervals(districts$obs_deaths, n=9, style="quantile")
classIntervals <- function(var, n, style="quantile", rtimes=3, ..., intervalClosure=c("left", "right"), dataPrecision=NULL) {
if (is.factor(var)) stop("var is categorical")
}
brks<-classIntervals(districts$obs_deaths, n=9, style="quantile")
brks<- brks$brks
plot(districts, col=colors[findInterval(districts$obs_death, brks,all.inside=TRUE)], axes=F)
is.na(districts$obs_death)
is.numeric(districts$obs_death)
is.na(districts$DIST_ID)
plot(districts, col=colors[findInterval(districts$obs_death, brks,all.inside=TRUE)], axes=F)
is.na(districts)
names(districts)
districts$obs_injured[is.na(districts$obs_injured)] <- 0
districts$obs_mmi_max_dist[is.na(districts$obs_mmi_max_dist)] <- 0
districts$obs_casualty[is.na(districts$obs_casualty)] <- 0
districts$pred_death[is.na(districts$pred_death)] <- 0
districts$pred_rate[is.na(districts$pred_rate)] <- 0
districts$pred_density[is.na(districts$pred_density)] <- 0
names(districts)
districts$obs_death[is.na(districts$obs_death)] <- 0
districts$obs_injured[is.na(districts$obs_injured)] <- 0
districts$obs_mmi_max_dist[is.na(districts$obs_mmi_max_dist)] <- 0
districts$obs_casualty[is.na(districts$obs_casualty)] <- 0
districts$pred_death[is.na(districts$pred_death)] <- 0
districts$pred_rate[is.na(districts$pred_rate)] <- 0
districts$pred_density[is.na(districts$pred_density)] <- 0
districts$index_cnt[is.na(districts$index_cnt)] <- 0
districts$index_rate[is.na(districts$index_rate)] <- 0
districts$index_density[is.na(districts$index_density)] <- 0
districts$wpredicted[is.na(districts$wpredicted)] <- 0
districts$index_roof[is.na(districts$index_roof)] <- 0
districts$index_wall[is.na(districts$index_wall)] <- 0
names(districts)
drops <- c("score_dist","score_di_1","score_di_2","score_di_3","score_di_4","score_di_5","score_di_6"
,"score_di_7","score_di_8","score_di_9","score_di10","score_di11","score_di12","score_di13")
districts[,!(names(districts) %in% drops)]
names(districts)
districts[, !(colnames(districts) %in% drops)]
d<- districts[, !(colnames(districts) %in% drops)]
names(d)
names(districts)
brks<-classIntervals(districts$obs_deaths, n=9, style="quantile")
brks<- brks$brks
plot(districts, col=colors[findInterval(districts$obs_death, brks,all.inside=TRUE)], axes=F)
install.packages('classInt')
library(classInt)
library('classInt')
setwd('/home/rebeldroid12/Desktop/swb/test/rem_spatial_research')
g = readShapeSpatial('chiphi.shp')
colors <- brewer.pal(9, "YlOrRd")
#set breaks for the 9 colors
brks<-classIntervals(g$Per.Capita, n=9, style="quantile")
brks<- brks$brks
g$Per.Capita<-as.numeric(g$Per.Capita)
colors <- brewer.pal(9, "YlOrRd")
#set breaks for the 9 colors
brks<-classIntervals(g$Per.Capita, n=9, style="quantile")
brks<- brks$brks
plot(g, col=colors[findInterval(g$Per.Capita, brks,all.inside=TRUE)], axes=F)
districts$total_pop = as.numeric(districts$score_dist)
districts$obs_death = as.numeric(districts$score_di_1)
districts$obs_injured = as.numeric(districts$score_di_2)
districts$obs_mmi_max_dist = as.numeric(districts$score_di_3)
districts$obs_casualty = as.numeric(districts$score_di_4)
districts$pred_death = as.numeric(districts$score_di_5)
districts$pred_rate = as.numeric(districts$score_di_6)
districts$pred_density = as.numeric(districts$score_di_7)
districts$index_cnt = as.numeric(districts$score_di_8)
districts$index_rate = as.numeric(districts$score_di_9)
districts$index_density = as.numeric(districts$score_di10)
districts$wpredicted = as.numeric(districts$score_di11)
districts$index_roof = as.numeric(districts$score_di12)
districts$index_wall = as.numeric(districts$score_di13)
colors <- brewer.pal(9, "YlOrRd")
brks<-classIntervals(districts$obs_deaths, n=9, style="quantile")
brks<- brks$brks
plot(districts, col=colors[findInterval(districts$obs_death, brks,all.inside=TRUE)], axes=F)
unique(districts$obs_death)
districts$obs_death[is.na(districts$obs_death)] <- 0
districts$obs_injured[is.na(districts$obs_injured)] <- 0
districts$obs_mmi_max_dist[is.na(districts$obs_mmi_max_dist)] <- 0
districts$obs_casualty[is.na(districts$obs_casualty)] <- 0
districts$pred_death[is.na(districts$pred_death)] <- 0
districts$pred_rate[is.na(districts$pred_rate)] <- 0
districts$pred_density[is.na(districts$pred_density)] <- 0
districts$index_cnt[is.na(districts$index_cnt)] <- 0
districts$index_rate[is.na(districts$index_rate)] <- 0
districts$index_density[is.na(districts$index_density)] <- 0
districts$wpredicted[is.na(districts$wpredicted)] <- 0
districts$index_roof[is.na(districts$index_roof)] <- 0
districts$index_wall[is.na(districts$index_wall)] <- 0
unique(districts$obs_death)
colors <- brewer.pal(9, "YlOrRd")
brks<-classIntervals(districts$obs_deaths, n=9, style="quantile")
brks<- brks$brks
plot(districts, col=colors[findInterval(districts$obs_death, brks,all.inside=TRUE)], axes=F)
unique(g$Per.Capita)
plot(g, col=colors[findInterval(g$Per.Capita, brks,all.inside=TRUE)], axes=F)
plot(districts, col=gray(mergedDist$death/max(mergedDist$death)))
plot(districts, col=gray(districts$death/max(districts$death)))
plot(districts, col=gray(districts$obs_death/max(districts$obs_death)))
obs_death = plot(districts, col=gray(districts$obs_death/max(districts$obs_death)))
#plot(districts, col=colors[findInterval(districts$obs_death, brks,all.inside=TRUE)], axes=F)
#print map
png(filename=obs_death.png")
plot(obs_death)
dev.off()
)
}
;
#plot prettiness!
obs_death = plot(districts, col=gray(districts$obs_death/max(districts$obs_death)))
#plot(districts, col=colors[findInterval(districts$obs_death, brks,all.inside=TRUE)], axes=F)
#print map
png(filename=obs_death.png")
plot(obs_death)
dev.off();
obs_death = plot(districts, col=gray(districts$obs_death/max(districts$obs_death)))
png(filename="./obs_death.png")
plot(obs_death)
dev.off();
getwd()
etwd('/home/rebeldroid12/Nepal_TeamViz')
setwd('/home/rebeldroid12/Nepal_TeamViz/merged_data/districts')
png(filename="./obs_death.png")
plot(obs_death)
dev.off();
plot(obs_death)
obs_death
plot(districts, col=gray(districts$obs_death/max(districts$obs_death)))
dev.copy(jpeg,filename="merged_data/districts/obs_death.jpg");
dev.off();
dev.copy(jpeg,filename="./merged_data/districts/obs_death.jpg");
dev.off();
getwd()
#print map
png(filename="./merged_data/districts/obs_death.png")
#plot prettiness!
plot(districts, col=gray(districts$obs_death/max(districts$obs_death)))
#plot(districts, col=colors[findInterval(districts$obs_death, brks,all.inside=TRUE)], axes=F)
dev.off();
getwd()
setwd('/home/rebeldroid12/Nepal_TeamViz/')
#print map
png(filename="./merged_data/districts/obs_death.png")
#plot prettiness!
plot(districts, col=gray(districts$obs_death/max(districts$obs_death)))
#plot(districts, col=colors[findInterval(districts$obs_death, brks,all.inside=TRUE)], axes=F)
dev.off();
setwd('/home/rebeldroid12/Nepal_TeamViz/merged_data/districts')
install.packages("maptools")
install.packages("sp")
install.packages("RColorBrewer")
install.packages("rgdal")
install.packages("classInt")
library(maptools)
library(sp)
library(RColorBrewer)
library(rgdal)
library(classInt)
#details
getinfo.shape("full_dist_merged_data.shp")
district_shp = readShapeSpatial('full_dist_merged_data.shp')
district_csv = read.csv('score_dist_final_20150616.csv', sep=",", header=TRUE)
district_shp$total_pop = as.numeric(as.character(district_shp$score_dist))
district_shp$obs_death = as.numeric(as.character(district_shp$score_di_1))
district_shp$obs_injured = as.numeric(as.character(district_shp$score_di_2))
district_shp$obs_mmi_max_dist = as.numeric(as.character(district_shp$score_di_3))
district_shp$obs_casualty = as.numeric(as.character(district_shp$score_di_4))
district_shp$pred_death = as.numeric(as.character(district_shp$score_di_5))
district_shp$pred_rate = as.numeric(as.character(district_shp$score_di_6))
district_shp$pred_density = as.numeric(as.character(district_shp$score_di_7))
district_shp$index_cnt = as.numeric(as.character(district_shp$score_di_8))
district_shp$index_rate = as.numeric(as.character(district_shp$score_di_9))
district_shp$index_density = as.numeric(as.character(district_shp$score_di10))
district_shp$wpredicted = as.numeric(as.character(district_shp$score_di11))
district_shp$index_roof = as.numeric(as.character(district_shp$score_di12))
district_shp$index_wall = as.numeric(as.character(district_shp$score_di13))
#change NAs back to zero
district_shp$total_pop[is.na(district_shp$total_pop)] <- 0
district_shp$obs_death[is.na(district_shp$obs_death)] <- 0
district_shp$obs_injured[is.na(district_shp$obs_injured)] <- 0
district_shp$obs_mmi_max_dist[is.na(district_shp$obs_mmi_max_dist)] <- 0
district_shp$obs_casualty[is.na(district_shp$obs_casualty)] <- 0
district_shp$pred_death[is.na(district_shp$pred_death)] <- 0
district_shp$pred_rate[is.na(district_shp$pred_rate)] <- 0
district_shp$pred_density[is.na(district_shp$pred_density)] <- 0
district_shp$index_cnt[is.na(district_shp$index_cnt)] <- 0
district_shp$index_rate[is.na(district_shp$index_rate)] <- 0
district_shp$index_density[is.na(district_shp$index_density)] <- 0
district_shp$wpredicted[is.na(district_shp$wpredicted)] <- 0
district_shp$index_roof[is.na(district_shp$index_roof)] <- 0
district_shp$index_wall[is.na(district_shp$index_wall)] <- 0
plotvar <- district_shp@data$obs_death
nclr <- 8
plotclr <- brewer.pal(nclr,"Greys")
class <- classIntervals(plotvar, nclr, style="quantile")
colcode <- findColours(class, plotclr)
plotvar <- district_shp@data$pred_death
nclr <- 8
plotclr <- brewer.pal(nclr,"Greys")
class <- classIntervals(plotvar, nclr, style="quantile")
colcode <- findColours(class, plotclr)
png(filename="./pred_death_color.png")
plot(district_shp)
plot(district_shp, col=colcode, add=T)
title(paste("Nepal Predictive Death"))
dev.off();
plotvar <- district_shp@data$total_pop
nclr <- 8
plotclr <- brewer.pal(nclr,"Greys")
class <- classIntervals(plotvar, nclr, style="quantile")
colcode <- findColours(class, plotclr)
#png(filename="./total_pop_color2.png")
plot(district_shp)
plot(district_shp, col=colcode, add=T)
title(paste("Nepal Total Population"))
#dev.off();
library("maptools")
carte=readShapeSpatial("/home/rebeldroid12/Desktop/nepal/Shape_Nepal/NPL_adm3.shp")
indicator=read.csv("/home/rebeldroid12/Desktop/nepal/Indicators.csv", sep=";", header=T)
merging2=merge(carte@data,indicator,by.x="NAME_3", by.y="DISTRICT", all.x=T)
library(classInt)
div = classIntervals(merging2$poorest_pct, 4, style ="quantile")$brks
library("RColorBrewer")
couleurs=brewer.pal(4,"Set1")
colorr=couleurs[(findInterval(merging2$poorest_pct,div,all.inside=T))]
plot(carte,col=colorr)
legend("bottom", legend = leglabs(div), fill = couleurs, bty ="n",
title ="Legend", title.adj =0, xpd = TRUE, y.intersp =-0.5,
xjust =1,adj =0, pt.cex = 1, cex = 0.7, x.intersp=3)
title(main="Poorest")
#total pop
plotvar <- district_shp@data$total_pop
nclr <- 8
plotclr <- brewer.pal(nclr,"Greys")
class <- classIntervals(plotvar, nclr, style="quantile")
colcode <- findColours(class, plotclr)
#png(filename="./total_pop_color2.png")
plot(district_shp)
plot(district_shp, col=colcode, add=T)
title(paste("Nepal Total Population"))
legend("bottom", legend= leglabs(class), fill = colcode)
legend("bottom", legend= class, fill = colcode)
leglabs(class)
legend("bottom", legend= leglabs(class), fill = plotclr)
plotvar <- district_shp@data$total_pop
nclr <- 8
plotclr <- brewer.pal(nclr,"Greys")
class <- classIntervals(plotvar, nclr, style="quantile")$brks
colcode <- findColours(class, plotclr)
#png(filename="./total_pop_color2.png")
plot(district_shp)
plot(district_shp, col=colcode, add=T)
title(paste("Nepal Total Population"))
legend("bottom", legend= leglabs(class), fill = plotclr)
title ="Legend", title.adj =0, xpd = TRUE, y.intersp =-0.5,
xjust =1,adj =0, pt.cex = 1, cex = 0.7, x.intersp=3)
legend("bottom", legend= leglabs(class), fill = plotclr, bty ="n",
title ="Legend", title.adj =0, xpd = TRUE, y.intersp =-0.5,
xjust =1,adj =0, pt.cex = 1, cex = 0.7, x.intersp=3)
plotvar <- district_shp@data$total_pop
nclr <- 8
plotclr <- brewer.pal(nclr,"Greys")
class <- classIntervals(plotvar, nclr, style="quantile")$brks
colcode <- findColours(class, plotclr)
#png(filename="./total_pop_color2.png")
plot(district_shp)
plot(district_shp, col=colcode, add=T)
title(paste("Nepal Total Population"))
legend("bottom", legend= leglabs(class), fill = plotclr, bty ="n",
title ="Legend", title.adj =0, xpd = TRUE, y.intersp =-0.5,
xjust =1,adj =0, pt.cex = 1, cex = 0.7, x.intersp=3)
plotvar <- district_shp@data$total_pop
nclr <- 8
plotclr <- brewer.pal(nclr,"Greys")
class <- classIntervals(plotvar, nclr, style="quantile")$brks
colcode <- findColours(class, plotclr)
#png(filename="./total_pop_color2.png")
plot(district_shp)
plot(district_shp, col=colcode, add=T)
title(paste("Nepal Total Population"))
legend("bottom", legend= leglabs(class), fill = plotclr, bty ="n",
title ="Legend", title.adj =0, xpd = TRUE, y.intersp =-0.5,
xjust =1,adj =0, pt.cex = 1, cex = 0.7, x.intersp=3)
plotvar <- district_shp@data$total_pop
nclr <- 8
plotclr <- brewer.pal(nclr,"Greys")
class <- classIntervals(plotvar, nclr, style="quantile")$brks
colcode <- findColours(class, plotclr)
#png(filename="./total_pop_color2.png")
plot(district_shp)
plot(district_shp, col=colcode, add=T)
title(paste("Nepal Total Population"))
legend("bottom", legend= leglabs(class), fill = plotclr, bty ="n",
title ="Legend", title.adj =0, xpd = TRUE, y.intersp =-1,
xjust =1,adj =0, pt.cex = 1, cex = 0.7, x.intersp=3)
plotvar <- district_shp@data$total_pop
nclr <- 8
plotclr <- brewer.pal(nclr,"Greys")
class <- classIntervals(plotvar, nclr, style="quantile")$brks
colcode <- findColours(class, plotclr)
#png(filename="./total_pop_color2.png")
plot(district_shp)
plot(district_shp, col=colcode, add=T)
title(paste("Nepal Total Population"))
legend("bottom", legend= leglabs(class), fill = plotclr, bty ="n",
title ="Legend", title.adj =0, xpd = TRUE, y.intersp =-0.8,
xjust =1,adj =0, pt.cex = 1, cex = 0.7, x.intersp=3)
plotvar <- district_shp@data$total_pop
nclr <- 8
plotclr <- brewer.pal(nclr,"Greys")
class <- classIntervals(plotvar, nclr, style="quantile")$brks
colcode <- findColours(class, plotclr)
#png(filename="./total_pop_color2.png")
plot(district_shp)
plot(district_shp, col=colcode, add=T)
title(paste("Nepal Total Population"))
legend("bottom", legend= leglabs(class), fill = plotclr, bty ="n",
title ="Total Population Ranges", title.adj =0, xpd = TRUE, y.intersp =-0.8,
xjust =1,adj =0, pt.cex = 1, cex = 0.7, x.intersp=3)
par(mfrow=c(2,2))
#total pop
plotvar <- district_shp@data$total_pop
nclr <- 8
plotclr <- brewer.pal(nclr,"Greys")
class <- classIntervals(plotvar, nclr, style="quantile")$brks
colcode <- findColours(class, plotclr)
#png(filename="./total_pop_color2.png")
plot(district_shp)
plot(district_shp, col=colcode, add=T)
title(paste("Nepal Total Population"))
legend("bottom", legend= leglabs(class), fill = plotclr, bty ="n",
title ="Total Population Ranges", title.adj =0, xpd = TRUE, y.intersp =-0.8,
xjust =1,adj =0, pt.cex = 1, cex = 0.7, x.intersp=3)
#dev.off();
plotvar <- district_shp@data$total_pop
nclr <- 8
#plotclr <- brewer.pal(nclr,"Greys")
plotclr2 <- colorRampPalette(c("black","white"))
class <- classIntervals(plotvar, nclr, style="quantile")$brks
colcode <- findColours(class, plotclr)
#png(filename="./total_pop_color2.png")
plot(district_shp)
plot(district_shp, col=colcode, add=T)
title(paste("Nepal Total Population"))
legend("bottom", legend= leglabs(class), fill = plotclr2, bty ="n",
title ="Total Population Ranges", title.adj =0, xpd = TRUE, y.intersp =-0.8,
xjust =1,adj =0, pt.cex = 1, cex = 0.7, x.intersp=3)
plotvar <- district_shp@data$total_pop
nclr <- 8
plotclr <- brewer.pal(nclr,"Greys")
#plotclr2 <- colorRampPalette(c("black","white"))
class <- classIntervals(plotvar, nclr, style="quantile")$brks
colcode <- findColours(class, plotclr)
#png(filename="./total_pop_color2.png")
plot(district_shp)
plot(district_shp, col=colcode, add=T)
title(paste("Nepal Total Population"))
legend("bottom", legend= leglabs(class), fill = plotclr, bty ="n",
title ="Total Population Ranges", title.adj =0, xpd = TRUE, y.intersp =-0.8,
xjust =1,adj =0, pt.cex = 1, cex = 0.7, x.intersp=3)
#total pop
plotvar <- district_shp@data$total_pop
nclr <- 8
plotclr <- brewer.pal(nclr,"Greys")
#plotclr2 <- colorRampPalette(c("black","white"))
class <- classIntervals(plotvar, nclr, style="quantile")$brks
colcode <- findColours(class, plotclr)
#png(filename="./total_pop_color2.png")
plot(district_shp)
plot(district_shp, col=colcode, add=T)
title(paste("Nepal Total Population"))
legend("bottom", legend= leglabs(class), fill = plotclr, bty ="n", title.adj =0, xpd = TRUE, y.intersp =-0.8,
xjust =1,adj =0, pt.cex = 1, cex = 0.7, x.intersp=3)
#dev.off();
plotvar <- district_shp@data$total_pop
nclr <- 8
plotclr <- brewer.pal(nclr,"Greys")
#plotclr2 <- colorRampPalette(c("black","white"))
class <- classIntervals(plotvar, nclr, style="quantile")$brks
colcode <- findColours(class, plotclr)
#png(filename="./total_pop_color2.png")
plot(district_shp)
plot(district_shp, col=colcode, add=T)
title(paste("Nepal Total Population"))
legend("bottom", legend= leglabs(class), fill = plotclr, bty ="n", title.adj =0, xpd = TRUE, y.intersp =-0.8,
xjust =1,adj =0, pt.cex = 1, cex = 0.7, x.intersp=3)
#dev.off();
par(mfrow=c(2,2))
#total pop
plotvar <- district_shp@data$total_pop
nclr <- 8
plotclr <- brewer.pal(nclr,"Greys")
class <- classIntervals(plotvar, nclr, style="quantile")$brks
colcode <- findColours(class, plotclr)
png(filename="./total_pop_grey.png")
plot(district_shp)
plot(district_shp, col=colcode, add=T)
title(paste("Nepal Total Population"))
legend("bottom", legend= leglabs(class), fill = plotclr, bty ="n", title.adj =0, xpd = TRUE, y.intersp =-0.8,
xjust =1,adj =0, pt.cex = 1, cex = 0.7, x.intersp=3)
dev.off();
par(mfrow=c(2,2))
#total pop
plotvar <- district_shp@data$total_pop
nclr <- 8
plotclr <- brewer.pal(nclr,"Greys")
class <- classIntervals(plotvar, nclr, style="quantile")$brks
colcode <- findColours(class, plotclr)
png(filename="./total_pop_grey.png")
plot(district_shp)
plot(district_shp, col=colcode, add=T)
title(paste("Nepal Total Population"))
legend("bottom", legend= leglabs(class), fill = plotclr, bty ="n", title.adj =0, xpd = TRUE, y.intersp =-0.8,
xjust =1,adj =0, pt.cex = 1, cex = 0.7, x.intersp=3)
plotvar <- district_shp@data$total_pop
nclr <- 8
plotclr <- brewer.pal(nclr,"Greys")
class <- classIntervals(plotvar, nclr, style="quantile")$brks
colcode <- findColours(class, plotclr)
png(filename="./total_pop_grey.png")
plot(district_shp)
plot(district_shp, col=colcode, add=T)
title(paste("Nepal Total Population"))
legend("bottom", legend= leglabs(class), fill = plotclr, bty ="n", title.adj =0, xpd = TRUE, y.intersp =-0.8,
xjust =1,adj =0, pt.cex = 1, cex = 0.7, x.intersp=3)
plotvar <- district_shp@data$total_pop
nclr <- 8
plotclr <- brewer.pal(nclr,"Greys")
class <- classIntervals(plotvar, nclr, style="quantile")$brks
colcode <- findColours(class, plotclr)
png(filename="./total_pop_grey.png")
plot(district_shp)
plot(district_shp, col=colcode, add=T)
title(paste("Nepal Total Population"))
legend("bottom", legend= leglabs(class), fill = plotclr, bty ="n", title.adj =0, xpd = TRUE, y.intersp =-0.8,
xjust =1,adj =0, pt.cex = 1, cex = 0.7, x.intersp=3)
plotvar <- district_shp@data$total_pop
nclr <- 8
plotclr <- brewer.pal(nclr,"Greys")
class <- classIntervals(plotvar, nclr, style="quantile")$brks
colcode <- findColours(class, plotclr)
png(filename="./total_pop_grey.png")
plot(district_shp)
plot(district_shp, col=colcode, add=T)
title(paste("Nepal Total Population"))
legend("bottom", legend= leglabs(class), fill = plotclr, bty ="n", title.adj =0, xpd = TRUE, y.intersp =-0.8,
xjust =1,adj =0, pt.cex = 1, cex = 0.7, x.intersp=3)
dev.off();
plotvar <- district_shp@data$obs_mmi_max_dist
nclr <- 8
plotclr <- brewer.pal(nclr,"Greys")
class <- classIntervals(plotvar, nclr, style="quantile")$brks
colcode <- findColours(class, plotclr)
png(filename="./mmi_grey.png")
plot(district_shp)
plot(district_shp, col=colcode, add=T)
title(paste("Nepal MMI"))
legend("bottom", legend= leglabs(class), fill = plotclr, bty ="n", title.adj =0, xpd = TRUE, y.intersp =-0.8,
xjust =1,adj =0, pt.cex = 1, cex = 0.7, x.intersp=3)
dev.off();
plotvar <- district_shp@data$obs_injured
nclr <- 8
plotclr <- brewer.pal(nclr,"Greys")
class <- classIntervals(plotvar, nclr, style="quantile")$brks
colcode <- findColours(class, plotclr)
png(filename="./injured_grey.png")
plot(district_shp)
plot(district_shp, col=colcode, add=T)
title(paste("Nepal Total Injured"))
legend("bottom", legend= leglabs(class), fill = plotclr, bty ="n", title.adj =0, xpd = TRUE, y.intersp =-0.8,
xjust =1,adj =0, pt.cex = 1, cex = 0.7, x.intersp=3)
dev.off();
plotvar <- district_shp@data$obs_deaths
nclr <- 8
plotclr <- brewer.pal(nclr,"Greys")
class <- classIntervals(plotvar, nclr, style="quantile")$brks
colcode <- findColours(class, plotclr)
png(filename="./deaths_grey.png")
plot(district_shp)
plot(district_shp, col=colcode, add=T)
title(paste("Nepal Total Deaths"))
legend("bottom", legend= leglabs(class), fill = plotclr, bty ="n", title.adj =0, xpd = TRUE, y.intersp =-0.8,
xjust =1,adj =0, pt.cex = 1, cex = 0.7, x.intersp=3)
dev.off();
